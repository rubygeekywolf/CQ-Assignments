1. Show the CompanyName for James D. Kramer
    
    SELECT CompanyName FROM SalesLT.Customer WHERE FirstName='James' AND MiddleName='D.' AND LastName='Kramer'


2. Show all the addresses listed for 'Modular Cycle Systems'
    
    SELECT A.* FROM SalesLT.Customer AS C 
    INNER JOIN SalesLT.CustomerAddress AS CA ON C.CustomerID=CA.CustomerID 
	INNER JOIN SalesLT.Address AS A ON CA.AddressID=A.AddressID WHERE C.CompanyName='Modular Cycle Systems'

3. Show OrdeQty, the Name and the ListPrice of the order made by CustomerID 635
    
    SELECT D.OrderQty,P.Name,P.ListPrice FROM SalesLT.Product AS P 
    INNER JOIN SalesLT.SalesOrderDetail AS D ON P.ProductID=D.ProductID 
	INNER JOIN SalesLT.SalesOrderHeader AS H ON D.SalesOrderID=H.SalesOrderID WHERE CustomerID=635 or CustomerID=30025


4. Show the first name and the email address of customer with CompanyName 'Bike World'
    
    SELECT FirstName,EmailAddress FROM SalesLT.Customer WHERE CompanyName='Bike World'


5. Show the CompanyName for all customers with an address in City 'Dallas'.
    
    SELECT DISTINCT C.CompanyName FROM SalesLT.Customer AS C 
    INNER JOIN SalesLT.CustomerAddress AS CA ON C.CustomerID=CA.CustomerID 
	INNER JOIN SalesLT.Address AS A ON CA.AddressID=A.AddressID WHERE A.City='Dallas'

6. How many items with ListPrice more than $1000 have been sold?
   
   SELECT COUNT(*) AS Items_Sold FROM 
    (SELECT p.ProductID FROM SalesLT.SalesOrderDetail AS p 
    LEFT JOIN SalesLT.Product AS s ON p.ProductID=s.ProductID WHERE S.ListPrice>1000 GROUP BY (p.ProductID)
    ) derived_table

    using exists:
    SELECT COUNT(P.ProductID) Items_Sold FROM SalesLT.Product P
    WHERE EXISTS(SELECT * FROM SalesLT.SalesOrderDetail D WHERE D.ProductID=P.ProductID) 
        AND P.ListPrice>1000 


7. Give the CompanyName of those customers with orders over $100000. Include the subtotal plus tax plus freight.
    
    SELECT c.CompanyName FROM SalesLT.Customer AS c 
    INNER JOIN SalesLT.SalesOrderHeader AS o ON c.CustomerID=o.CustomerID 
	INNER JOIN SalesLT.SalesOrderDetail AS d ON o.SalesOrderID=d.SalesOrderID 
    GROUP BY(c.CompanyName) HAVING SUM(o.TotalDue)>100000


8. Find the number of left racing socks ('Racing Socks, L') ordered by CompanyName 'Riding Cycles'

    SELECT SUM(D.OrderQty) FROM SalesLT.Customer C INNER JOIN SalesLT.SalesOrderHeader H ON C.CustomerID=H.CustomerID
    INNER JOIN SalesLT.SalesOrderDetail D ON H.SalesOrderID=D.SalesOrderID
    INNER JOIN SalesLT.Product P ON D.ProductID=P.ProductID WHERE C.CompanyName='Riding Cycles' AND P.Name='Racing Socks, L' GROUP BY(P.Name)

    USING EXISTS:

    SELECT D.OrderQty FROM SalesLT.SalesOrderDetail D
    WHERE EXISTS ( SELECT * FROM SalesLT.Product P  WHERE P.ProductID=D.ProductID AND P.Name='Racing Socks, L' AND 
                    EXISTS (SELECT * FROM SalesLT.SalesOrderHeader H WHERE D.SalesOrderID=H.SalesOrderID AND 
                            EXISTS (SELECT * FROM SalesLT.Customer C WHERE H.CustomerID=C.CustomerID AND C.CompanyName='Riding Cycles')
                            )
                ) 

9. “Single Item Order” is a customer order where only one item is ordered. Show the SalesOrderID and the UnitPrice for every Single Item Order.
    
   SELECT SalesOrderID,UnitPrice FROM SalesLT.SalesOrderDetail WHERE SalesOrderID IN 
    (SELECT SalesOrderID FROM SalesLT.SalesOrderDetail 
    GROUP BY SalesOrderID HAVING COUNT(SalesOrderID)=1)

    USING EXISTS:
    
    SELECT SalesOrderID,UnitPrice FROM SalesLT.SalesOrderDetail o 
    WHERE EXISTS
        (SELECT SalesOrderID FROM SalesLT.SalesOrderDetail d WHERE o.SalesOrderID=d.SalesOrderID 
        GROUP BY d.SalesOrderID HAVING COUNT(d.SalesOrderID)=1)


10. Show the product description for culture ‘fr’ for product with ProductID 736.
    
    SELECT PD.Description FROM SalesLT.Product AS P JOIN SalesLT.ProductModelProductDescription AS PM ON P.ProductModelID=PM.ProductModelID
	INNER JOIN SalesLT.ProductDescription AS PD ON PM.ProductDescriptionID=PD.ProductDescriptionID 
    WHERE PM.Culture='fr' AND P.ProductID=736
